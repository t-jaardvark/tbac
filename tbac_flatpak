#!/bin/bash

# Color codes for messages
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# Configuration file location
CONFIG_DIR="$HOME/.config/tbac"
CONFIG_FILE="$CONFIG_DIR/tbac_flatpak.env"

# Function to load or initialize the environment configuration
load_env() {
    if [[ ! -d "$CONFIG_DIR" ]]; then
        mkdir -p "$CONFIG_DIR"
    fi

    if [[ ! -f "$CONFIG_FILE" ]]; then
        echo "DUMP_FILES=('/1/tjh/backups/linux/state.d/tbac_flatpak/flatpak_list.txt' '$HOME/.config/tbac/tbac_flatpak/flatpak_list.txt')" > "$CONFIG_FILE"
        echo -e "${YELLOW}Configuration file created at $CONFIG_FILE. Please customize the settings and rerun the script.${NC}"
        exit 0
    fi

    source "$CONFIG_FILE"
}

# Function to dump explicitly installed Flatpaks
dump_flatpaks() {
    load_env
    for file in ${DUMP_FILES[@]}; do
        dir=$(dirname "$file")
        mkdir -p "$dir"
        flatpak list --app --columns=application > "$file"
        echo -e "${GREEN}Explicitly installed Flatpaks have been dumped to $file${NC}"
    done
}

# Function to restore Flatpaks from the dump file
restore_flatpaks() {
    load_env

    if [[ ! -f "$FLATPAK_DIR/$FLATPAK_LIST_FILE" ]]; then
        echo -e "${RED}Error: $FLATPAK_DIR/$FLATPAK_LIST_FILE not found!${NC}"
        exit 1
    fi

    while IFS= read -r app; do
        flatpak install -y "$app"
    done < "$FLATPAK_DIR/$FLATPAK_LIST_FILE"

    echo -e "${GREEN}Flatpaks have been restored from $FLATPAK_DIR/$FLATPAK_LIST_FILE${NC}"
}

# Main script logic
case "$1" in
    dump)
        dump_flatpaks
        ;;
    restore)
        restore_flatpaks
        ;;
    *)
        dump_flatpaks
        ;;
esac
